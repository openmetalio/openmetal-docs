"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[9029],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>k});var t=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=t.createContext({}),s=function(e){var a=t.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},u=function(e){var a=s(e.components);return t.createElement(c.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=r,k=p["".concat(c,".").concat(d)]||p[d]||m[d]||o;return n?t.createElement(k,i(i({ref:a},u),{},{components:n})):t.createElement(k,i({ref:a},u))}));function k(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50630:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=n(87462),r=(n(67294),n(3905));const o={slug:"/engineers-notes/custom-image-packer",description:"Learn how to build custom OpenStack images with Hashicorp Packer"},i="Creating Custom Images with Packer on OpenMetal",l={unversionedId:"engineers-notes/custom-image-packer",id:"engineers-notes/custom-image-packer",title:"Creating Custom Images with Packer on OpenMetal",description:"Learn how to build custom OpenStack images with Hashicorp Packer",source:"@site/docs/engineers-notes/custom-image-packer.md",sourceDirName:"engineers-notes",slug:"/engineers-notes/custom-image-packer",permalink:"/docs/manuals/engineers-notes/custom-image-packer",draft:!1,editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/engineers-notes/custom-image-packer.md",tags:[],version:"current",frontMatter:{slug:"/engineers-notes/custom-image-packer",description:"Learn how to build custom OpenStack images with Hashicorp Packer"},sidebar:"tutorialSidebar",previous:{title:"How to Configure Terraform to Automate OpenStack\u2019s Resources",permalink:"/docs/manuals/terraform/configure-terraform-to-automate-openstack-resources"},next:{title:"Cloud Physical Resource Usage - Custom Datadog Dashboard",permalink:"/docs/manuals/openstack-admin/cloud-resource-usage-dashboard"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install packer",id:"install-packer",level:2},{value:"Prepare your environment",id:"prepare-your-environment",level:2},{value:"Create security group",id:"create-security-group",level:2},{value:"Initialize packer",id:"initialize-packer",level:2},{value:"Define a source block",id:"define-a-source-block",level:2},{value:"Define build block",id:"define-build-block",level:2},{value:"Validate configuration and build image",id:"validate-configuration-and-build-image",level:2},{value:"Resources",id:"resources",level:2}],u={toc:s};function p(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-custom-images-with-packer-on-openmetal"},"Creating Custom Images with Packer on OpenMetal"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Packer is a free and open source tool designed to automate image building and\ncustomization across multiple platforms. In this article you will learn how to\ncreate an Ubuntu 22.04 LTS image from an external source file for use on your\nOpenMetal cloud."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An OpenStack Cloud"),(0,r.kt)("li",{parentName:"ul"},"Familiarity with ",(0,r.kt)("a",{parentName:"li",href:"/docs/manuals/operators-manual/day-1/command-line/openstackclient"},"OpenStack Client CLI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.packer.io"},"Packer"))),(0,r.kt)("h2",{id:"install-packer"},"Install packer"),(0,r.kt)("p",null,"You will first need to install packer. The following assumes you are running an\nUbuntu/Debian environment. For installation on other platforms see the upstream\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.hashicorp.com/packer/downloads"},"Install Packer")," documentation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg\n\necho "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\n\nsudo apt update && sudo apt install packer\n')),(0,r.kt)("h2",{id:"prepare-your-environment"},"Prepare your environment"),(0,r.kt)("p",null,"Activate the virtual environment created for the OpenStack client if\napplicable and not already active:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"source .venv/bin/activate\n")),(0,r.kt)("p",null,"Source your OpenStack credentials from ",(0,r.kt)("inlineCode",{parentName:"p"},"<user>-openrc.sh"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"source <user>-openrc.sh\n")),(0,r.kt)("p",null,"Create and enter working directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir packer-build\ncd packer-build\n")),(0,r.kt)("h2",{id:"create-security-group"},"Create security group"),(0,r.kt)("p",null,"Packer will spin up a temporary instance with the desired source image and\nrequires SSH access. Create a new security group and rule to allow ingress\non port 22:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"openstack security group create build-group\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'openstack security group rule create \\\n--remote-ip 0.0.0.0/0 \\\n--protocol tcp \\\n--dst-port 22 \\\n--description "Builder SSH access" \\\nbuild-group\n')),(0,r.kt)("h2",{id:"initialize-packer"},"Initialize packer"),(0,r.kt)("p",null,"We first need to define the packer plugin we will be using. This is done with\n",(0,r.kt)("inlineCode",{parentName:"p"},"required_plugins")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"packer")," block. Run the following command in the build\ndirectory created above:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cat <<EOF> image.pkr.hcl\npacker {\n  required_plugins {\n    openstack = {\n      version = ">= 1.0.1"\n      source  = "github.com/hashicorp/openstack"\n    }\n  }\n}\nEOF\n')),(0,r.kt)("p",null,"You can now initialize the packer environment which installs the defined plugin:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ packer init .\nInstalled plugin github.com/hashicorp/openstack v1.0.1 in "/home/ubuntu/.config/packer/plugins/github.com/hashicorp/openstack/packer-plugin-openstack_v1.0.1_x5.0_linux_amd64"\n')),(0,r.kt)("h2",{id:"define-a-source-block"},"Define a source block"),(0,r.kt)("p",null,"With packer initialized you now need to define a ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," block in your\n",(0,r.kt)("inlineCode",{parentName:"p"},"image.pkr.hcl"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'source "openstack" "demo" {\n  flavor                    = "<image flavor>" # openstack flavor list\n  image_name                = "<new image name>"\n  external_source_image_url = "<source image link>"\n  ssh_username              = "<ssh username>" # Default SSH user for external source img\n  security_groups           = ["<security group>"] # Security groups to allow SSH access\n}\n')),(0,r.kt)("p",null,"The example above defines the minimum information required to create an\nunmodified OpenStack image from an external image source. In our example\nwe are creating an Ubuntu 22.04 LTS image using the following values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"flavor"),': "m1.small"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image_name"),': "Ubuntu 22.04 (jammy-amd64)"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"external_source_image_url"),": ",(0,r.kt)("a",{parentName:"li",href:"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"},"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ssh_username"),': "ubuntu"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"security_group"),': "build-group"')),(0,r.kt)("p",null,"After adding these values, or replacing them with your own, the ",(0,r.kt)("inlineCode",{parentName:"p"},"source")," block\nshould now look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'source "openstack" "demo" {\n  flavor                    = "m1.small"\n  image_name                = "Ubuntu 22.04 (jammy-amd64)"\n  external_source_image_url = "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"\n  ssh_username              = "ubuntu"\n  security_groups           = ["build-group"]\n}\n')),(0,r.kt)("h2",{id:"define-build-block"},"Define build block"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," block in packer is where you would define customizations to the\nimage. As we are only creating a default image the build block will only need\nthe source defined:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hcl"},'build {\n  sources = ["source.openstack.demo"]\n}\n')),(0,r.kt)("p",null,"Once you've added the build block, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"packer fmt")," command to automagically\ncorrect any formatting discrepancies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"packer fmt .\n")),(0,r.kt)("p",null,"Your ",(0,r.kt)("inlineCode",{parentName:"p"},"image.pkr.hcl")," should now look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat image.pkr.hcl \npacker {\n  required_plugins {\n    openstack = {\n      version = ">= 1.0.1"\n      source  = "github.com/hashicorp/openstack"\n    }\n  }\n}\n\nsource "openstack" "demo" {\n  flavor                    = "m1.small"\n  image_name                = "Ubuntu 22.04 (jammy-amd64)"\n  external_source_image_url = "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"\n  ssh_username              = "ubuntu"\n  security_groups           = ["build-group"]\n}\n\nbuild {\n  sources = ["source.openstack.demo"]\n}\n')),(0,r.kt)("h2",{id:"validate-configuration-and-build-image"},"Validate configuration and build image"),(0,r.kt)("p",null,"Now that your configuration file is complete, verify everything is correct\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"packer validate"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ packer validate .\nThe configuration is valid.\n")),(0,r.kt)("p",null,"Once validated you are ready to build your image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ packer build .\nopenstack.demo: output will be in this color.\n\n==> openstack.demo: Loading flavor: m1.small\n    openstack.demo: Verified flavor. ID: m1.small\n==> openstack.demo: Creating temporary RSA SSH key for instance...\n==> openstack.demo: Creating temporary keypair: packer_636aa8e7-85aa-b787-ca40-b494195062d8 ...\n==> openstack.demo: Created temporary keypair: packer_636aa8e7-85aa-b787-ca40-b494195062d8\n==> openstack.demo: Creating image using external source image with name packer_636aa8e7-5f8a-8c58-b8fd-b415f5d433aa\n==> openstack.demo: Using disk format qcow2\n==> openstack.demo: Created image with ID 11919271-4c41-4f28-a20e-417dda203c45\n==> openstack.demo: Importing External Source Image from URL https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img\n    openstack.demo: Image not Active, retrying in 10 seconds\n[...]\n==> openstack.demo: Launching server...\n==> openstack.demo: Launching server...\n    openstack.demo: Server ID: 779e2ffe-5c18-4c28-b714-bff62d234129\n==> openstack.demo: Waiting for server to become ready...\n    openstack.demo: Floating IP not required\n==> openstack.demo: Using SSH communicator to connect: 173.231.253.58\n==> openstack.demo: Waiting for SSH to become available...\n==> openstack.demo: Connected to SSH!\n==> openstack.demo: Stopping server: 779e2ffe-5c18-4c28-b714-bff62d234129 ...\n    openstack.demo: Waiting for server to stop: 779e2ffe-5c18-4c28-b714-bff62d234129 ...\n==> openstack.demo: Creating the image: Ubuntu 22.04 (jammy-amd64)\n    openstack.demo: Image: c2ed4308-593c-4a0c-adc5-dbeebaf69dbd\n==> openstack.demo: Waiting for image Ubuntu 22.04 (jammy-amd64) (image id: c2ed4308-593c-4a0c-adc5-dbeebaf69dbd) to become ready...\n==> openstack.demo: Terminating the source server: 779e2ffe-5c18-4c28-b714-bff62d234129 ...\n==> openstack.demo: Deleting temporary external source image: packer_636aa8e7-5f8a-8c58-b8fd-b415f5d433aa ...\n==> openstack.demo: Deleting temporary keypair: packer_636aa8e7-85aa-b787-ca40-b494195062d8 ...\nBuild 'openstack.demo' finished after 1 minute 59 seconds.\n\n==> Wait completed after 1 minute 59 seconds\n\n==> Builds finished. The artifacts of successful builds are:\n--\x3e openstack.demo: An image was created: c2ed4308-593c-4a0c-adc5-dbeebaf69dbd\n")),(0,r.kt)("p",null,"We can see from the output above that the build process completed successfully.\nWe can view the new image properties with ",(0,r.kt)("inlineCode",{parentName:"p"},"openstack image show <new_image_id>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ openstack image show c2ed4308-593c-4a0c-adc5-dbeebaf69dbd --fit-width\n+------------------+-----------------------------------------------------------------------------------------------+\n| Field            | Value                                                                                         |\n+------------------+-----------------------------------------------------------------------------------------------+\n| container_format | bare                                                                                          |\n| created_at       | 2022-11-08T19:09:07Z                                                                          |\n| disk_format      | raw                                                                                           |\n| file             | /v2/images/c2ed4308-593c-4a0c-adc5-dbeebaf69dbd/file                                          |\n| id               | c2ed4308-593c-4a0c-adc5-dbeebaf69dbd                                                          |\n| min_disk         | 25                                                                                            |\n| min_ram          | 0                                                                                             |\n| name             | Ubuntu 22.04 (jammy-amd64)                                                                    |\n| owner            | 20de51f9e6714727aabe668cdcf33d67                                                              |\n| properties       | base_image_ref='11919271-4c41-4f28-a20e-417dda203c45', boot_roles='reader,member,admin',      |\n|                  | image_location='snapshot', image_state='available', image_type='image',                       |\n|                  | instance_uuid='779e2ffe-5c18-4c28-b714-bff62d234129', locations='[{'url': 'rbd://c368d47b-005 |\n|                  | 5-4380-bda9-257e0c662b90/images/c2ed4308-593c-4a0c-adc5-dbeebaf69dbd/snap', 'metadata':       |\n|                  | {'store': 'rbd'}}]', os_glance_failed_import='', os_glance_importing_to_stores='',            |\n|                  | os_hidden='False', owner_project_name='kubespray-demo', owner_user_name='admin',              |\n|                  | stores='rbd', user_id='14ca74f0b2da43d680fdba3910d4ee3a'                                      |\n| protected        | False                                                                                         |\n| schema           | /v2/schemas/image                                                                             |\n| size             | 26843545600                                                                                   |\n| status           | active                                                                                        |\n| tags             |                                                                                               |\n| updated_at       | 2022-11-08T19:09:15Z                                                                          |\n| visibility       | private                                                                                       |\n+------------------+-----------------------------------------------------------------------------------------------+\n")),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hashicorp Packer ",(0,r.kt)("a",{parentName:"li",href:"https://developer.hashicorp.com/packer/docs"},"documentation")),(0,r.kt)("li",{parentName:"ul"},"OpenStack Builder ",(0,r.kt)("a",{parentName:"li",href:"https://developer.hashicorp.com/packer/plugins/builders/openstack"},"plugin"))))}p.isMDXComponent=!0}}]);