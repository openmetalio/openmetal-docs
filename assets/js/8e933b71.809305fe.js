"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[7968],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>v});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(t),g=r,v=p["".concat(s,".").concat(g)]||p[g]||c[g]||a;return t?i.createElement(v,l(l({ref:n},d),{},{components:t})):i.createElement(v,l({ref:n},d))}));function v(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},47883:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var i=t(87462),r=(t(67294),t(3905));const a={slug:"/private-ai/engineering-notes/install-grid-driver-vgpu",description:"Install NVIDIA GRID guest drivers in VMs to enable vGPU and MIG device access, with guidance on validation and troubleshooting.",sidebar_position:5},l="Installing and Managing NVIDIA GRID Drivers for Virtual GPU (vGPU) Deployments",o={unversionedId:"private-ai/engineering-notes/install-grid-driver-vgpu",id:"private-ai/engineering-notes/install-grid-driver-vgpu",title:"Installing and Managing NVIDIA GRID Drivers for Virtual GPU (vGPU) Deployments",description:"Install NVIDIA GRID guest drivers in VMs to enable vGPU and MIG device access, with guidance on validation and troubleshooting.",source:"@site/docs/private-ai/engineering-notes/install-grid-driver-vgpu.md",sourceDirName:"private-ai/engineering-notes",slug:"/private-ai/engineering-notes/install-grid-driver-vgpu",permalink:"/docs/manuals/private-ai/engineering-notes/install-grid-driver-vgpu",draft:!1,editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/private-ai/engineering-notes/install-grid-driver-vgpu.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{slug:"/private-ai/engineering-notes/install-grid-driver-vgpu",description:"Install NVIDIA GRID guest drivers in VMs to enable vGPU and MIG device access, with guidance on validation and troubleshooting.",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Configuring MIG Profiles and Launching VMs with OpenStack",permalink:"/docs/manuals/private-ai/engineering-notes/configuring-mig-and-vms-openstack"},next:{title:"Monitoring, Scheduling, and Performance Management of Virtual GPUs",permalink:"/docs/manuals/private-ai/engineering-notes/monitoring-scheduling-vgpu"}},s={},u=[{value:"When Are GRID Drivers Needed?",id:"when-are-grid-drivers-needed",level:2},{value:"Obtaining the GRID Guest Driver",id:"obtaining-the-grid-guest-driver",level:2},{value:"Installing the Driver in a Linux VM",id:"installing-the-driver-in-a-linux-vm",level:2},{value:"Common Validation Commands",id:"common-validation-commands",level:2},{value:"Monitoring GPU Utilization",id:"monitoring-gpu-utilization",level:2},{value:"Managing vGPU Drivers at Scale",id:"managing-vgpu-drivers-at-scale",level:2},{value:"Operational Notes",id:"operational-notes",level:2},{value:"Next Steps",id:"next-steps",level:2}],d={toc:u};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installing-and-managing-nvidia-grid-drivers-for-virtual-gpu-vgpu-deployments"},"Installing and Managing NVIDIA GRID Drivers for Virtual GPU (vGPU) Deployments"),(0,r.kt)("p",null,"To enable virtual machines to recognize and use NVIDIA vGPUs or MIG-backed\ndevices, the correct driver must be installed inside the guest operating system.\nThis article covers the process of installing the ",(0,r.kt)("strong",{parentName:"p"},"NVIDIA GRID guest driver"),",\nverifying GPU access, and managing vGPU behavior in virtualized environments."),(0,r.kt)("h2",{id:"when-are-grid-drivers-needed"},"When Are GRID Drivers Needed?"),(0,r.kt)("p",null,"The GRID guest driver is required whenever a VM is attached to a virtual GPU\nresource\u2014whether via SR-IOV, full vGPU, or MIG-based mediated devices. These\ndrivers expose the assigned GPU slice as a usable compute device within the VM,\nallowing AI/ML and other GPU-accelerated applications to execute as expected."),(0,r.kt)("h2",{id:"obtaining-the-grid-guest-driver"},"Obtaining the GRID Guest Driver"),(0,r.kt)("p",null,"The NVIDIA GRID guest drivers are separate from standard GPU drivers.\nThey are available through the ",(0,r.kt)("strong",{parentName:"p"},"NVIDIA Enterprise portal")," and require a\nsupported license."),(0,r.kt)("p",null,"Choose the version that corresponds to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Your GPU (e.g., A100)"),(0,r.kt)("li",{parentName:"ul"},"Your hypervisor (e.g., KVM for OpenStack)"),(0,r.kt)("li",{parentName:"ul"},"Your guest OS (e.g., Ubuntu, RHEL, Windows)")),(0,r.kt)("p",null,"Note: OpenMetal customers using MIG do not require an active GRID license for\nLinux compute workloads unless display features or Windows guests are required."),(0,r.kt)("h2",{id:"installing-the-driver-in-a-linux-vm"},"Installing the Driver in a Linux VM"),(0,r.kt)("p",null,"Upload the driver to the guest VM."),(0,r.kt)("p",null,"Install required packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install build-essential dkms\n")),(0,r.kt)("p",null,"Run the installer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x NVIDIA-Linux-x86_64-<version>.run\nsudo ./NVIDIA-Linux-x86_64-<version>.run\n")),(0,r.kt)("p",null,"Follow prompts to build and install the kernel module."),(0,r.kt)("p",null,"Once installed, reboot the VM and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nvidia-smi\n")),(0,r.kt)("p",null,"The output should list the assigned vGPU or MIG device, along with available\nmemory and driver version."),(0,r.kt)("h2",{id:"common-validation-commands"},"Common Validation Commands"),(0,r.kt)("p",null,"Verify vGPU visibility:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"lspci | grep -i nvidia\n")),(0,r.kt)("p",null,"Confirm CUDA devices:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nvidia-smi -L\n")),(0,r.kt)("p",null,"Check which profile is assigned:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat /proc/driver/nvidia/gpus/0000:00:04.0/information\n")),(0,r.kt)("p",null,"This information can be matched with MIG or SR-IOV profile types created on the host."),(0,r.kt)("h2",{id:"monitoring-gpu-utilization"},"Monitoring GPU Utilization"),(0,r.kt)("p",null,"Within the VM, you can monitor GPU memory usage and activity:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"watch -n1 nvidia-smi\n")),(0,r.kt)("p",null,"This is useful for tracking inference loads, batch jobs, and application\nperformance metrics."),(0,r.kt)("p",null,"For more detailed telemetry, use NVIDIA DCGM or integrate GPU metrics into\nexisting observability pipelines (e.g., Prometheus with exporters)."),(0,r.kt)("h2",{id:"managing-vgpu-drivers-at-scale"},"Managing vGPU Drivers at Scale"),(0,r.kt)("p",null,"In large deployments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Build golden images that include the GRID driver")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Use cloud-init or config management tools (e.g., Ansible) to install drivers\nat boot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Tag flavors with driver version compatibility to avoid mismatches between MIG\nconfiguration and guest environment"))),(0,r.kt)("p",null,"If you rebuild MIG instances on the host or change profiles, verify that VMs\nretain compatible drivers or rebuild as needed."),(0,r.kt)("h2",{id:"operational-notes"},"Operational Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GRID guest drivers are tied to specific kernel versions. After a kernel update,\ndrivers may need to be reinstalled or rebuilt.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Incompatible driver versions can prevent VMs from booting or accessing GPU resources.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In Linux guests, Secure Boot must be disabled or driver signing must be enabled."))),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"With the driver installed and the VM successfully connected to a GPU partition,\nthe next article will cover ",(0,r.kt)("strong",{parentName:"p"},"Monitoring, Scheduling, and Performance Management\nof Virtual GPUs")," in OpenStack environments."),(0,r.kt)("p",null,"OpenMetal\u2019s infrastructure supports GPU virtualization at scale, giving users\nfull control over driver versions, kernel behavior, and resource allocation without\nreliance on third-party GPU-as-a-service platforms."))}p.isMDXComponent=!0}}]);