"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[9243],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),h=i,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||r;return a?n.createElement(m,o(o({ref:t},c),{},{components:a})):n.createElement(m,o({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85434:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={},o="Persistent Port VM Multiple Interface Configurations",l={unversionedId:"engineers-notes/multiport-manual",id:"engineers-notes/multiport-manual",title:"Persistent Port VM Multiple Interface Configurations",description:"Written by Ramon Grullon",source:"@site/docs/engineers-notes/multiport-manual.md",sourceDirName:"engineers-notes",slug:"/engineers-notes/multiport-manual",permalink:"/docs/manuals/engineers-notes/multiport-manual",draft:!1,editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/engineers-notes/multiport-manual.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kubernetes - Failed to detach Persistent Volume",permalink:"/docs/manuals/engineers-notes/kubernetes-failed-to-detach-persistent-volume"},next:{title:"VPC in the Context of OpenStack",permalink:"/docs/manuals/engineers-notes/vpc-in-the-context-of-openstack"}},s={},p=[{value:"The Right Way to Do It (Private with Gateway) Floating for (NAT/SNAT)",id:"the-right-way-to-do-it-private-with-gateway-floating-for-natsnat",level:2},{value:"Direct External (No Floating IP) + Private with No Gateway",id:"direct-external-no-floating-ip--private-with-no-gateway",level:2},{value:"Secondary Network without Gateway",id:"secondary-network-without-gateway",level:3},{value:"Comparison between Multi-Port Address Pairs and Multi-port Policy-Based Routing",id:"comparison-between-multi-port-address-pairs-and-multi-port-policy-based-routing",level:2},{value:"Multi-Port Address Pairs",id:"multi-port-address-pairs",level:3},{value:"Definition of Address Pairs",id:"definition-of-address-pairs",level:4},{value:"Use Case for Address Pairs",id:"use-case-for-address-pairs",level:4},{value:"Benefits of Address Pairs",id:"benefits-of-address-pairs",level:4},{value:"Multi-Port Policy-Based Routing",id:"multi-port-policy-based-routing",level:3},{value:"Definition of PBR",id:"definition-of-pbr",level:4},{value:"Use Case for PBR",id:"use-case-for-pbr",level:4},{value:"Benefits of PBR",id:"benefits-of-pbr",level:4},{value:"Comparison",id:"comparison",level:3},{value:"Multi-IP Single Port (Address Pairs) Solution",id:"multi-ip-single-port-address-pairs-solution",level:2},{value:"Cloud Admin",id:"cloud-admin",level:3},{value:"Cloud Tenant",id:"cloud-tenant",level:3},{value:"Multiple Internal Interfaces with Gateways &amp; Floating IPs &amp; Policy-Based",id:"multiple-internal-interfaces-with-gateways--floating-ips--policy-based",level:2},{value:"Cloud Admin Pre-Req",id:"cloud-admin-pre-req",level:3},{value:"Cloud Tenant Pre-Req",id:"cloud-tenant-pre-req",level:3},{value:"VM creation",id:"vm-creation",level:4},{value:"Port Creation",id:"port-creation",level:4},{value:"<strong>*Note: The below step is not required in RHEL distributions</strong>",id:"note-the-below-step-is-not-required-in-rhel-distributions",level:3},{value:"Attach Port",id:"attach-port",level:4},{value:"Configure Policy Based Routing",id:"configure-policy-based-routing",level:4},{value:"SSH to your instance",id:"ssh-to-your-instance",level:5},{value:"<strong>Sending traffic to 1st interface created</strong>",id:"sending-traffic-to-1st-interface-created",level:3},{value:"<strong>Sending traffic to Secondary interface created</strong>",id:"sending-traffic-to-secondary-interface-created",level:3},{value:"Create a new IP route table",id:"create-a-new-ip-route-table",level:4},{value:"ADD ROUTES TO NEW TABLE",id:"add-routes-to-new-table",level:4},{value:"DELETE THE ENTRIES FROM YOUR MAIN IP ROUTING TABLE",id:"delete-the-entries-from-your-main-ip-routing-table",level:4},{value:"YOUR 2 ROUTING TABLES SHOULD LOOK SIMILAR TO THIS",id:"your-2-routing-tables-should-look-similar-to-this",level:4},{value:"Add rules for new IP routing table",id:"add-rules-for-new-ip-routing-table",level:5},{value:"Testing configuration",id:"testing-configuration",level:4},{value:"(Bonus) Persistence - Ubuntu/RHEL",id:"bonus-persistence---ubunturhel",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Context",id:"context",level:2},{value:"Procedure",id:"procedure",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"persistent-port-vm-multiple-interface-configurations"},"Persistent Port VM Multiple Interface Configurations"),(0,i.kt)("p",null,"Written by Ramon Grullon"),(0,i.kt)("p",null,"A default gateway is a network device or node in a computer network that serves\nas an entry and exit point for data traffic flowing to and from other networks.\nIt is a routing device that enables communication between devices within the same\nlocal network and devices on external networks, such as the internet."),(0,i.kt)("h2",{id:"the-right-way-to-do-it-private-with-gateway-floating-for-natsnat"},"The Right Way to Do It (Private with Gateway) Floating for (NAT/SNAT)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configure a private interface with a gateway.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Launch an Instance:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Navigate to "Compute" > "Instances" in the left menu.')))),(0,i.kt)("p",null,'Click on the "Launch Instance" button.',(0,i.kt)("img",{alt:"Launchinstance",src:a(9079).Z,width:"958",height:"604"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Instance Details:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fill in the basic details for your instance:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Name: Enter a name for your instance.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Source: Choose your desired image.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Flavor: Choose an appropriate flavor.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Instance Count: Set the number of instances you want to launch to 1.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Instance Boot Source: Choose "Boot from image."')))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Access & Security:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configure security settings:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Key Pair: Select a key pair if you have one.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Security Groups: Choose appropriate security groups."))))))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Network-selection",src:a(61611).Z,width:"957",height:"603"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Networking:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Under "Network Interfaces," select the network where you want to attach the instance.'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Review and Launch:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Review your configuration on the summary page.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Click "Launch" to create the instance.')))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Instance Status:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Once the instance is launched, navigate to "Compute" > "Instances" to see\nthe status of your instance.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Verify that the instance has a single port attached to the selected network.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Access the Console (Optional):"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If needed, access the console of the instance to configure networking setting")))),(0,i.kt)("p",null,"Add a floating IP for external access"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Floatingip",src:a(42770).Z,width:"1172",height:"420"}),"\nSSH into the instance with the public floating IP and run IP route."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ubuntu@test1:~$ ip route\ndefault via 192.168.0.1 dev ens3 proto dhcp src 192.168.0.147 metric 100 \n169.254.169.254 via 192.168.0.101 dev ens3 proto dhcp src 192.168.0.147 metric 100 \n192.168.0.0/24 dev ens3 proto kernel scope link src 192.168.0.147 \n\n")),(0,i.kt)("p",null,"The private interface with its associated gateway facilitates\ncontrolled communication between internal and external networks, enabling\ninternet access and centralized management. Simultaneously, keeping additional\nports/networks without a gateway is crucial for network isolation, security, and\nflexibility in designing custom network configurations. Both aspects contribute\nto creating a well-architected and secure network environment."),(0,i.kt)("h2",{id:"direct-external-no-floating-ip--private-with-no-gateway"},"Direct External (No Floating IP) + Private with No Gateway"),(0,i.kt)("h3",{id:"secondary-network-without-gateway"},"Secondary Network without Gateway"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configure a direct external interface on 1 instance")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configure a private interface without a gateway and without a gateway on\nmultiple networks on 2 separate instances")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create a Network:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Navigate to "Network" > "Networks" in the left menu.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Click on the "Create Network" button.')))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Network Details:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fill in the details for your network:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Name: Enter a name for your network.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Project: Choose the project for which you want to create the network.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Network Address: Specify the network address in CIDR notation (e.g., 192.168.1.0/24).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Enable DHCP: Disable DHCP as you won't have a gateway.")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Subnet Details:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Click on "Subnet" to add a subnet to the network.'),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Name: Enter a name for your subnet.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Network Address: Specify the subnet address in CIDR notation (e.g., 192.168.1.0/24).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Gateway IP: Leave this field blank since you don't want a gateway.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Disable DHCP: Disable DHCP for this subnet."))))))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Disable-gateway",src:a(83061).Z,width:"731",height:"454"}),"\nReview and Create"),(0,i.kt)("p",null,"Review your configuration on the summary page."),(0,i.kt)("p",null,'Click "Create" to create the network.'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Verify the Network:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Navigate to "Network" > "Networks" to see the newly created network.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ensure that the network does not have a gateway IP associated."))))),(0,i.kt)("p",null,"First to explain how these two approaches work and their differences"),(0,i.kt)("p",null,"Multi-port address pairs and multi-port policy-based routing are two different\nconcepts in networking, each serving specific purposes. Let's discuss each concept."),(0,i.kt)("h2",{id:"comparison-between-multi-port-address-pairs-and-multi-port-policy-based-routing"},"Comparison between Multi-Port Address Pairs and Multi-port Policy-Based Routing"),(0,i.kt)("h3",{id:"multi-port-address-pairs"},"Multi-Port Address Pairs"),(0,i.kt)("h4",{id:"definition-of-address-pairs"},"Definition of Address Pairs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Address Pairs: In networking, an address pair refers to associating multiple\nIP addresses with a single network interface.")),(0,i.kt)("h4",{id:"use-case-for-address-pairs"},"Use Case for Address Pairs"),(0,i.kt)("p",null,"Floating IPs: In OpenStack a floating IP is an IP address that can be dynamically\nreassigned to different instances, providing high availability and failover capabilities."),(0,i.kt)("h4",{id:"benefits-of-address-pairs"},"Benefits of Address Pairs"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"High Availability: Enables instances to quickly recover from failure by\nassociating a new IP address.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Load Balancing: Allows for distributing traffic across multiple instances."))),(0,i.kt)("h3",{id:"multi-port-policy-based-routing"},"Multi-Port Policy-Based Routing"),(0,i.kt)("h4",{id:"definition-of-pbr"},"Definition of PBR"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Policy-Based Routing (PBR): A technique in networking where routing decisions\nare based on policies defined by administrators rather than the traditional\nrouting table.")),(0,i.kt)("h4",{id:"use-case-for-pbr"},"Use Case for PBR"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Custom Routing Decisions: Policy-based routing allows administrators to define\nrules or policies that determine the route traffic takes based on specific\ncriteria, such as source IP, destination IP, or type of service.")),(0,i.kt)("h4",{id:"benefits-of-pbr"},"Benefits of PBR"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Flexible Routing Decisions: Provides flexibility in determining how traffic is\nrouted based on various criteria.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Traffic Engineering: Enables optimization of network paths based on specific requirements."))),(0,i.kt)("h3",{id:"comparison"},"Comparison"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Purpose:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Address Pairs: Primarily used for high availability and load balancing,\nespecially in cloud environments.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Policy-Based Routing: Used to customize routing decisions based on policies\ndefined by administrators.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Scope:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Address Pairs: Generally associated with a specific network interface on an\nindividual device.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Policy-Based Routing: Affects the entire routing decision process on a device.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Granularity:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Address Pairs: Operates at the level of individual IP addresses associated\nwith a network interface.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Policy-Based Routing: Allows for complex routing decisions based on various criteria.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Example Scenarios:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Address Pairs: Floating IP scenarios in cloud environments where IP addresses\ncan be dynamically reassigned.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Policy-Based Routing: Implementing specific routing policies, such as sending\ntraffic from a particular source through a specific gateway."))))),(0,i.kt)("p",null,"In summary, multi-port address pairs are focused on associating multiple IP\naddresses with a single network interface for specific use cases like floating\nIPs, while multi-port policy-based routing allows administrators to customize\nrouting decisions based on defined policies. The choice between them depends\non the specific networking requirements and goals of a given scenario."),(0,i.kt)("h2",{id:"multi-ip-single-port-address-pairs-solution"},"Multi-IP Single Port (Address Pairs) Solution"),(0,i.kt)("h3",{id:"cloud-admin"},"Cloud Admin"),(0,i.kt)("p",null,"Allocated 2 Floating IPs to desired Project."),(0,i.kt)("h3",{id:"cloud-tenant"},"Cloud Tenant"),(0,i.kt)("p",null,"Create 2 ports prior to the creation of your instance."),(0,i.kt)("p",null,"In Horizon, Go to Network - Networks - Ports and Create a port"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"addport",src:a(87486).Z,width:"1136",height:"538"})),(0,i.kt)("p",null,"Configure 2 ports with distinct names and set them to the subnet and security\ngroup desired"),(0,i.kt)("p",null,"(Keep in mind, you must have your network and subnet configured prior to this step.)"),(0,i.kt)("p",null,"Note: This is necessary to allow"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"create port",src:a(39740).Z,width:"713",height:"703"})),(0,i.kt)("p",null,"When creating a port, allocate the correct Security Groups to the port."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Add security group",src:a(75323).Z,width:"718",height:"555"})),(0,i.kt)("p",null,"Create an instance making sure to select the correct network ports."),(0,i.kt)("p",null,"Select all the ports you previously created."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Select ports",src:a(56949).Z,width:"946",height:"382"})),(0,i.kt)("p",null,"Due to issues with ip routing during creation caused by the multiple ports,\ncloud-init is unable to inject your SSH key. ",(0,i.kt)("strong",{parentName:"p"},"You must select the configuration\ndrive")," to enable OpenStack to add your SSH key."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Select config drive",src:a(12293).Z,width:"949",height:"512"})),(0,i.kt)("p",null,"In order to configure multi-port networking, you must identify which port is\ndesignated as the default route interface. You can view the console log on\nHorizon and look at the routing table configuration as the instance is created."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"View log",src:a(28628).Z,width:"1072",height:"772"})),(0,i.kt)("p",null,"The console log will display a network device table which you will use to\ncorrelate the interface that is the default gateway to its IP address."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Network device info",src:a(28176).Z,width:"1069",height:"182"})),(0,i.kt)("p",null,"The console log will display a routing table where the interface representing\nRoute 0 is the default gateway. In this example, eth0 is the default gateway.\nLooking at the network device table from above, its IP address is 192.168.3.170"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Routing table",src:a(30529).Z,width:"973",height:"165"})),(0,i.kt)("p",null,"Go to Network - Networks - Your Subnet - Ports"),(0,i.kt)("p",null,"Identify the port associated with the IP address of the default gateway identified\nearlier. In this case, it\u2019s port1"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Correlate IP to port",src:a(97338).Z,width:"1090",height:"611"})),(0,i.kt)("p",null,"Click on the port -\xa0\u201cAllowed Address Pairs\u201d tab - Add Allowed Address Pair"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Add address pair",src:a(14956).Z,width:"1087",height:"454"})),(0,i.kt)("p",null,"The corresponding IP addresses of the other 2 ports to the allowed addresses.\nIn this case, 192.168.3.156"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Show address pair",src:a(62874).Z,width:"1084",height:"502"})),(0,i.kt)("p",null,"In order to test this, I will add floating IPs to each of the two ports and\nconfirm I can SSH into the instance through all 2 IPs."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Show floating IPs",src:a(66421).Z,width:"1039",height:"538"})),(0,i.kt)("p",null,"You can run the following curl command from inside your instance to confirm\nsuccessful completion of your multi-port setup. This will curl through each port\nto ",(0,i.kt)("a",{parentName:"p",href:"https://ifconfig.me"},"https://ifconfig.me")," and return your publicly accessible IP address."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl --interface eth0 ifconfig.me; echo\n\ncurl --interface eth1 ifconfig.me; echo\n")),(0,i.kt)("h2",{id:"multiple-internal-interfaces-with-gateways--floating-ips--policy-based"},"Multiple Internal Interfaces with Gateways & Floating IPs & Policy-Based"),(0,i.kt)("p",null,"Table Reconfiguration"),(0,i.kt)("h3",{id:"cloud-admin-pre-req"},"Cloud Admin Pre-Req"),(0,i.kt)("p",null,"Allocated 2 Floating IPs to desired Project."),(0,i.kt)("h3",{id:"cloud-tenant-pre-req"},"Cloud Tenant Pre-Req"),(0,i.kt)("h4",{id:"vm-creation"},"VM creation"),(0,i.kt)("p",null,"Create a VM attaching the desired subnet. (In this example we are using 192.168.0.0/24)"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Create instance",src:a(89325).Z,width:"953",height:"788"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Configure Networks",src:a(27230).Z,width:"957",height:"604"})),(0,i.kt)("p",null,"Attach a floating IP and confirm you can access the VM through SSH."),(0,i.kt)("h4",{id:"port-creation"},"Port Creation"),(0,i.kt)("p",null,"Create a new port in the same subnet."),(0,i.kt)("p",null,"In Horizon, Go to Network - Networks - Select your network - Ports and Create a port"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Create Port",src:a(7928).Z,width:"1136",height:"538"})),(0,i.kt)("p",null,"Configure a secondary port with a distinct name and set the port to the subnet\nand security group desired."),(0,i.kt)("h3",{id:"note-the-below-step-is-not-required-in-rhel-distributions"},(0,i.kt)("strong",{parentName:"h3"},"*Note: The below step is not required in RHEL distributions")),(0,i.kt)("p",null,"dhclient, provides a means for configuring one or more network interfaces using\nthe DHCP to request an IP from a DHCP server."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Configure Port",src:a(51197).Z,width:"729",height:"776"})),(0,i.kt)("p",null,"When creating a port, allocate the correct Security Groups to the port."),(0,i.kt)("p",null,"Note: Security Groups must be set for each port to allow external access."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Add Security Groups",src:a(75323).Z,width:"718",height:"555"})),(0,i.kt)("h4",{id:"attach-port"},"Attach Port"),(0,i.kt)("p",null,"Go to Instances - and attach the new port to the instance you created initially."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note: Make sure by Port on the option on how to specify an interface.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Attach interface",src:a(30034).Z,width:"1173",height:"563"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Select network",src:a(45195).Z,width:"1176",height:"572"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Show Port",src:a(69451).Z,width:"960",height:"403"})),(0,i.kt)("p",null,"Attach a floating IP to this new port. Your instance will now have 4 distinct IPs"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Attach floating IP",src:a(13155).Z,width:"1422",height:"257"})),(0,i.kt)("h4",{id:"configure-policy-based-routing"},"Configure Policy Based Routing"),(0,i.kt)("h5",{id:"ssh-to-your-instance"},"SSH to your instance"),(0,i.kt)("p",null,"For context, every machine can only have 1 default gateway out of the box but\nsince we have 2 separate interfaces which by design have a default gateway\ndefined in IP route, the interface with the lower metric is assigned by the\nsystem to send all traffic out. This means any traffic meant for the secondary\ninterface will fail such as ICMP pings."),(0,i.kt)("h3",{id:"sending-traffic-to-1st-interface-created"},(0,i.kt)("strong",{parentName:"h3"},"Sending traffic to 1st interface created")),(0,i.kt)("p",null,"External packet (ICMP Ping) - Floating IP - Internal IP (eth0) - Pong -\nCheck IPRoute - This IP route has the lowest metric and is used"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"default via 192.168.0.1 dev eth0 proto dhcp src 192.168.0.107 metric 100\n")),(0,i.kt)("p",null,"Then you send traffic out dev eth0 - Floating IP - External IP (Success)"),(0,i.kt)("h3",{id:"sending-traffic-to-secondary-interface-created"},(0,i.kt)("strong",{parentName:"h3"},"Sending traffic to Secondary interface created")),(0,i.kt)("p",null,"External packet (ICMP Ping) - Floating IP - Internal IP (eth1) - Pong -\nCheck IPRoute - This IP route has the lowest metric and is used"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"default via 192.168.0.1 dev eth0 proto dhcp src 192.168.0.107 metric 100\n")),(0,i.kt)("p",null,"Then you send traffic out dev eth0 - Floating IP (No route to host) -\nExternal IP (Failure)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[cloud-user@multiport-test ~]$ ip route\ndefault via 192.168.0.1 dev eth0 proto dhcp src 192.168.0.107 metric 100 \ndefault via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n169.254.169.254 via 192.168.0.100 dev eth0 proto dhcp src 192.168.0.107 metric 100 \n169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.107 metric 100 \n192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 \n\n")),(0,i.kt)("p",null,"To assign each interface to utilize a specific default gateway, we must create a\nsecondary IP route table with rules for our secondary"),(0,i.kt)("h4",{id:"create-a-new-ip-route-table"},"Create a new IP route table"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'cloud-user@multiport-test ~]$sudo bash\ncloud-user@multiport-test ~]$echo "1 port2" >> /etc/iproute2/rt_tables\n')),(0,i.kt)("p",null,"Add IP routes to the new IP route table \u201cport2\u201d and delete secondary interface\nroutes from the primary IP route table. Run IP route and copy, paste the entries\nwith eth1(secondary interface) for ease of use during this process."),(0,i.kt)("h4",{id:"add-routes-to-new-table"},"ADD ROUTES TO NEW TABLE"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[root@multiport-test cloud-user]# ip route add default via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101 table port2\n[root@multiport-test cloud-user]# ip route add 169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 table port2\n[root@multiport-test cloud-user]# ip route add 192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 table port2\n")),(0,i.kt)("h4",{id:"delete-the-entries-from-your-main-ip-routing-table"},"DELETE THE ENTRIES FROM YOUR MAIN IP ROUTING TABLE"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[root@multiport-test cloud-user]# ip route del default via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101\n[root@multiport-test cloud-user]# ip route del 169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n[root@multiport-test cloud-user]# ip route del 192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 \n")),(0,i.kt)("h4",{id:"your-2-routing-tables-should-look-similar-to-this"},"YOUR 2 ROUTING TABLES SHOULD LOOK SIMILAR TO THIS"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[root@multiport-test cloud-user]# ip route\ndefault via 192.168.0.1 dev eth0 proto dhcp src 192.168.0.107 metric 100 \n169.254.169.254 via 192.168.0.100 dev eth0 proto dhcp src 192.168.0.107 metric 100 \n192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.107 metric 100 \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[root@multiport-test cloud-user]# ip route list table port2\ndefault via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 \n")),(0,i.kt)("h5",{id:"add-rules-for-new-ip-routing-table"},"Add rules for new IP routing table"),(0,i.kt)("p",null,"In our example we have both interfaces utilizing the same subnet, therefore we\nmust set a static IP(This is .112 which we assigned to eth1) in our rules to use\nour secondary routing table anytime traffic is entering or exiting the VM for\nour secondary interface."),(0,i.kt)("p",null,"Add these rules to your secondary table specifying your specific IP"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ip rule add from 192.168.0.112/32 lookup port2\nip rule add oif eth1 table port2\nip rule add iif eth1 table port2\n")),(0,i.kt)("h4",{id:"testing-configuration"},"Testing configuration"),(0,i.kt)("p",null,"Ping test"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ping -I eth0 192.168.0.1\nping -I eth1 192.168.0.1\n")),(0,i.kt)("p",null,"Confirm with tcpdump - Run the ping command and open a new session with tcpdump\ninstalled and the output expected -"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[cloud-user@multiport-test ~]$ sudo tcpdump -nni eth1 icmp\ndropped privs to tcpdump\ntcpdump: verbose output suppressed, use -v[v]... for full protocol decode\nlistening on eth1, link-type EN10MB (Ethernet), snapshot length 262144 bytes\n17:56:27.898382 IP 192.168.0.112 > 192.168.0.1: ICMP echo request, id 3, seq 1, length 64\n17:56:27.898992 IP 192.168.0.1 > 192.168.0.112: ICMP echo reply, id 3, seq 1, length 64\n17:56:28.949107 IP 192.168.0.112 > 192.168.0.1: ICMP echo request, id 3, seq 2, length 64\n17:56:28.949344 IP 192.168.0.1 > 192.168.0.112: ICMP echo reply, id 3, seq 2, length 64\n17:56:29.973112 IP 192.168.0.112 > 192.168.0.1: ICMP echo request, id 3, seq 3, length 64\n17:56:29.973245 IP 192.168.0.1 > 192.168.0.112: ICMP echo reply, id 3, seq 3, length 64\n17:56:30.997126 IP 192.168.0.112 > 192.168.0.1: ICMP echo request, id 3, seq 4, length 64\n17:56:30.997264 IP 192.168.0.1 > 192.168.0.112: ICMP echo reply, id 3, seq 4, length 64\n17:56:32.021131 IP 192.168.0.112 > 192.168.0.1: ICMP echo request, id 3, seq 5, length 64\n17:56:32.021314 IP 192.168.0.1 > 192.168.0.112: ICMP echo reply, id 3, seq 5, length 64\n^C\n10 packets captured\n11 packets received by filter\n0 packets dropped by kernel\n\n")),(0,i.kt)("p",null,"Run curl command against ifconfig.me to confirm each interface is using itself\nas its gateway"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[cloud-user@multiport-test ~]$ curl --interface eth1 http://ifconfig.me; echo\n173.231.253.221\n[cloud-user@multiport-test ~]$ curl --interface eth0 http://ifconfig.me; echo\n200.225.45.137\n\n")),(0,i.kt)("h2",{id:"bonus-persistence---ubunturhel"},"(Bonus) Persistence - Ubuntu/RHEL"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Provide instructions for making network configurations persistent on Ubuntu.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Provide instructions for making network configurations persistent on RHEL/CentOS."))),(0,i.kt)("p",null,"In this process we will implement policy-based routing using systemd by creating\na systemd service unit that executes a script responsible for setting up the\nrequired IP routes."),(0,i.kt)("p",null,"Persistent policy-based routing is often desirable in scenarios where specific\nrouting decisions need to persist across reboots or network restarts. Here are\nsome reasons why someone might want to implement persistent policy-based routing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Customized Routing Policies:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When there is a need for custom routing policies based on specific criteria\nsuch as source IP, destination IP, or type of service."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Traffic Engineering:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To optimize network paths and direct traffic in a way that aligns with\nspecific performance or security requirements."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Multi-Homed Systems:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"In situations where a system has multiple network interfaces connected to\ndifferent networks, and the administrator wants to control how traffic flows\nthrough each interface."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Load Balancing:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For load balancing scenarios where multiple paths exist, and administrators\nwant to distribute traffic across those paths."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"High Availability and Failover:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"In setups where there are redundant network paths, administrators can use\npersistent policy-based routing to implement failover mechanisms for improved\nnetwork availability."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Security and Isolation:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To create network segmentation and isolate traffic between different parts\nof a network, enhancing security."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Specialized Services:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"When a system provides specialized services and needs to route specific types\nof traffic through dedicated network paths."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Consistent Network Configuration:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To maintain consistent network configurations across reboots, ensuring that\nthe system operates with the desired routing behavior.")))),(0,i.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2 interfaces configured with IPs address and floating IPs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Secondary route table created in /etc/iproute2/rt_tables (Refer to VM Multiple\nInterface Configuration with Policy Based Routing for further guidance)"))),(0,i.kt)("h2",{id:"context"},"Context"),(0,i.kt)("p",null,"Our initial ip route looks like this. We will be working with 2 interfaces with\n2 IPs -"),(0,i.kt)("p",null,"eth0 - 192.168.0.107 & eth1 - 192.168.0.112"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[cloud-user@multiport-test ~]$ ip route\ndefault via 192.168.0.1 dev eth0 proto dhcp src 192.168.0.107 metric 100 \ndefault via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n169.254.169.254 via 192.168.0.100 dev eth0 proto dhcp src 192.168.0.107 metric 100 \n169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 \n192.168.0.0/24 dev eth0 proto kernel scope link src 192.168.0.107 metric 100 \n192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101\n\n")),(0,i.kt)("h2",{id:"procedure"},"Procedure"),(0,i.kt)("p",null,"Create a script (let's call it policy-routing.sh): I located my file in\n/usr/bin/policy-routing.sh and make the file executable - chmod +x policy-routing.sh"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\nip route add default via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101 table port2\nip route add 169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 table port2\nip route add 192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 table port2\nip route del default via 192.168.0.1 dev eth1 proto dhcp src 192.168.0.112 metric 101\nip route del 169.254.169.254 via 192.168.0.100 dev eth1 proto dhcp src 192.168.0.112 metric 101 \nip route del 192.168.0.0/24 dev eth1 proto kernel scope link src 192.168.0.112 metric 101 \nip rule add from 192.168.0.112/32 lookup port2\nip rule add oif eth1 table port2\nip rule add iif eth1 table port2\n\n")),(0,i.kt)("p",null,"This file will include the IP routes for your secondary routing table(in this\nexample called port2)."),(0,i.kt)("p",null,"You will also remove the secondary interface eth1 IP routes from the main routing\ntable."),(0,i.kt)("p",null,"To finalize, you will add the IP rules for your routing table."),(0,i.kt)("p",null,"Create a systemd service unit file (e.g., /etc/systemd/system/policy-routing.service):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Unit]\nDescription=Policy-Based Routing Setup\nAfter=network-online.target\nWants=network-online.target\n\n[Service]\nExecStart=/bin/bash /usr/bin/policy-routing.sh\n\n[Install]\nWantedBy=multi-user.target\n\n")),(0,i.kt)("p",null,"Make the script executable:"),(0,i.kt)("p",null,"Reload systemd to pick up the changes:"),(0,i.kt)("p",null,"dynamically enable and start the service for a specific interface, i.e. to\nconfigure policy-based routing for ",(0,i.kt)("inlineCode",{parentName:"p"},"eth0")," -"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable --now pbr@eth0.service\n")),(0,i.kt)("p",null,"This will execute the script with the specified interface name and configure\npolicy-based routing accordingly."),(0,i.kt)("p",null,"Repeat the process for each interface you want to configure. Adjust the routing\ncommands in the script based on your specific requirements."),(0,i.kt)("p",null,"This file will execute the policy.sh script upon startup making sure to run after\nthe networking service has started."),(0,i.kt)("p",null,"After creating the unit file, reload systemd to pick up the changes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,i.kt)("p",null,"You can then enable and start the service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl enable policy-routing.service\nsystemctl start policy-routing.service\n")))}u.isMDXComponent=!0},14956:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/addadresspair-2a8536d85c397945854faa54207bf676.png"},87486:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/addport-4c44714abc90b685cfc5c54f4205f2ca.png"},75323:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/addsg-ca0d957d9b11c01a4848f47e2f6b9b05.png"},27230:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/configurenetworks-edfbb0752707ff682d44229e5930e0db.png"},97338:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/correlateiptoport-50a1cf34c9e4e1ace26d4da8c57a637b.png"},89325:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/createinstance-994f344dc0b4deeefb5861691f3448ea.png"},39740:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/createport-4df3ddd199bd38b94a14a2078ca5d2c1.png"},83061:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/disablegateway-02309be5ab7603733b85eb30ba34e5ba.png"},42770:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/floatingip-9e03522784fae8265817b03a75e55fa1.png"},66421:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/floatingipsformultiport-da0e1dc0de202c80997a5d092867c5cf.png"},9079:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/launchinstance-0fdc43ab5d1a679d6b5d1f958de7d164.png"},28176:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/netdeviceinfo-6d8598bb75bdfa7ccbf1072ff314cb2b.png"},13155:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrattachfloatinip-1582d13b985860ca315dd58bdbc0c933.png"},30034:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrattachinterface-14318706ad3616f00c4cf74e90ebfb2c.png"},51197:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrconfigureport-a5406ef5726869c9f632981e7f690cba.png"},7928:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrcreateport-4c44714abc90b685cfc5c54f4205f2ca.png"},45195:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrselectnetwork-092bdf37fc50ca57828ea307ebf941ae.png"},69451:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pbrshowport-64c4d75210cc4985cc84dfad3fa955a3.png"},30529:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/routetable-b844921ef61096e9ac29b1597d8ebf44.png"},61611:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/select-network-b7bdc1cc0c0750adb842abfc8a2d8282.png"},12293:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/selectconfigdrive-05eeabf0ea175a9d3059ded51bb65322.png"},56949:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/selectports-54b5a04ff7e6ba450cedbf2bc2a09ffc.png"},62874:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/showaddresspair-0ee47adb5709760705eec0912a8efbaa.png"},28628:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/viewlog-08ee3a5756bcf623edcf35d0c40addc6.png"}}]);