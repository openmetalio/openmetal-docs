"use strict";(self.webpackChunkopenmetal_docs=self.webpackChunkopenmetal_docs||[]).push([[9827],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},24954:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={slug:"/tutorials/backup-vm-data-to-ceph-with-swift-s3api",description:"Practical example of VM data backup to Ceph with Swift S3API and rclone.",sidebar_position:12},o="Backup VM Data to Ceph with Swift S3API",l={unversionedId:"tutorials/backing-up-with-rclone",id:"tutorials/backing-up-with-rclone",title:"Backup VM Data to Ceph with Swift S3API",description:"Practical example of VM data backup to Ceph with Swift S3API and rclone.",source:"@site/docs/tutorials/backing-up-with-rclone.md",sourceDirName:"tutorials",slug:"/tutorials/backup-vm-data-to-ceph-with-swift-s3api",permalink:"/docs/manuals/tutorials/backup-vm-data-to-ceph-with-swift-s3api",draft:!1,editUrl:"https://github.com/openmetalio/openmetal-docs/blob/main/docs/tutorials/backing-up-with-rclone.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{slug:"/tutorials/backup-vm-data-to-ceph-with-swift-s3api",description:"Practical example of VM data backup to Ceph with Swift S3API and rclone.",sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"Backing Up Important Data",permalink:"/docs/manuals/tutorials/backing-up-important-data"},next:{title:"Create a Site-to-Site VPN Connection with Endpoint Groups in Horizon",permalink:"/docs/manuals/tutorials/create-site-to-site-vpn-in-horizon"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment",id:"environment",level:3},{value:"Rclone",id:"rclone",level:2},{value:"Reasoning",id:"reasoning",level:3},{value:"Preparation",id:"preparation",level:2},{value:"Initial S3cmd sync",id:"initial-s3cmd-sync",level:2},{value:"Incremental backups",id:"incremental-backups",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Reference",id:"reference",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backup-vm-data-to-ceph-with-swift-s3api"},"Backup VM Data to Ceph with Swift S3API"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In this guide we will demonstrate generating backups of important data from a\nproduction VM to Ceph backed object storage on your OpenMetal cloud using rclone."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/manuals/openstack-admin/access-swift-s3-api"},"EC2 Credentials")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/manuals/openstack-admin/swift-s3-api-access-with-rclone"},"Rclone CLI tool")),(0,r.kt)("li",{parentName:"ul"},"Familiarity with ",(0,r.kt)("a",{parentName:"li",href:"/docs/manuals/tutorials/backing-up-important-data"},"Backing Up Important Data"))),(0,r.kt)("h3",{id:"environment"},"Environment"),(0,r.kt)("p",null,"For this demonstration we have an Ubuntu focal instance serving WordPress on an\noptimized LEMP stack managed by Ansible. In this example, all service and server\nconfiguration is handled by Ansible, so only user and CMS specific content need\nbe backed up."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The demo environment was deployed using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/inmotionhosting/wordpress-ultrastack-ansible"},"WordPress UltraStack"),"\nAnsible playbook.")),(0,r.kt)("h2",{id:"rclone"},"Rclone"),(0,r.kt)("h3",{id:"reasoning"},"Reasoning"),(0,r.kt)("p",null,"Rclone is chosen as the preferred tool in this example due to its ",(0,r.kt)("inlineCode",{parentName:"p"},"sync")," option\nproviding similar functionality and ownership/permission preservation to the\nLinux native rsync tool. Additionally, in our testing, rclone consistently\noutperformed other tooling in speed of operations and transfers by a significant\nmargin."),(0,r.kt)("h2",{id:"preparation"},"Preparation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a bucket using the server hostname or otherwise unique ID:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"rclone mkdir backup-demo:$(hostname)\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Export a full backup of the CMS database:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note"),": We perform this manually for illustrative purposes, ideally this\nprocess is performed on a scheduled cron using native tooling.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir ~/sql-dump\ncd ~/sql-dump\n\n# Dump DB via WP-CLI\n$ wp db export --path=\"../doc_root\"\nSuccess: Exported to 'ubuntu-2022-12-13-7fbde57.sql'.\n")))),(0,r.kt)("h2",{id:"initial-s3cmd-sync"},"Initial S3cmd sync"),(0,r.kt)("p",null,"Now perform an initial sync of the user directory which includes the SQL dump\nfiles and document root, excluding the WordPress cache folder, with the command\nbelow:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'rclone sync /home/ubuntu/ backup-demo:$(hostname)/${USER}/ \\\n --exclude="/home/ubuntu/doc_root/wp-content/cache"\n')),(0,r.kt)("h2",{id:"incremental-backups"},"Incremental backups"),(0,r.kt)("p",null,"At times, it is unnecessary or unwarranted to create duplicate copies of\neverything whenever backups run. To reduce disk and bandwidth usage when using\nsync you can pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"--backup-dir")," flag which will copy or move any files\nwhich would have been overwritten or deleted, in their original hierarchy, into\nthe directory specified. The example below updates the existing remote backup\nwith any local changes storing any incremental changes in a timestamped\nsubdirectory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'rclone sync /home/ubuntu/ backup-demo:$(hostname)/${USER}/ \\\n --exclude="/home/ubuntu/doc_root/wp-content/cache" \\\n --backup-dir backup-demo:$(hostname)/$(date -u +%Y-%m-%dT%H:%MZ)/ \\\n --update\n')),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"While we have only touched on a very basic backup scenario, the tooling and\nconcepts presented should provide a foundation for you to explore, plan and\nimplement a backup strategy to fit your needs."),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://rclone.org/commands/"},"Rclone commands"))))}u.isMDXComponent=!0}}]);