openapi: 3.0.3
info:
  title: OpenMetal API
  description: |
    ## Authentication

    All endpoints are secured using **Bearer Token Authentication**. To access the API, you need to include a valid token in the `Authorization` header of your requests.  
   
    Example:
    ```
    Authorization: Bearer <your-token>
    ```
    Ensure that the token is kept secure and not shared publicly. Unauthorized requests will result in a `401 Unauthorized` response. 
    Please ask your OpenMetal account manager for a valid token. If you have trouble authenticating or accessing the API, please contact
    [support@openmetal.io](mailto:support@openmetal.io) for assistance.

  version: 1.0.0

  x-logo:
    url: https://central.openmetal.io/assets/img/open-metal-logo.svg
    altText: OpenMetal
    href: https://openmetal.io    # Optional, clicking the logo redirects to this URL

servers:
  - url: https://api-omc.openmetal.io
    description: Production server

tags:
  - name: Clouds
    description: Oppertions for managing a collection of severs. Private clouds, or a 
      group of baremetal nodes will be owned by a cloud resource.
  - name: Inventory
    description: Operations for retrieving inventory information such as available locations and availability.
  - name: Orders
    description: Operations for managing orders.

x-tagGroups:
  - name: Core Endpoints
    tags:
      - Clouds
      - Inventory
      - Orders

paths:
  /v1/clouds:
    get:
      tags:
        - Clouds
      summary: Get a list of clouds
      description: Retrieve a list of of your clouds.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cloud'
  /v1/clouds/{cloudId}:
    get:
      tags:
        - Clouds
      summary: Get a cloud by ID
      description: Retrieve details of a specific cloud by their ID.
      parameters:
        - name: cloudId
          in: path
          required: true
          description: The ID of the cloud to retrieve.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cloud found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
        '404':
          description: Cloud not found.
  /v1/clouds/{cloudId}/stats:
    get:
      tags:
        - Clouds
      summary: Get hardware information
      description: Get hardware information for a specific cloud. This includes current power state of all nodes.
      parameters:
        - name: cloudId
          in: path
          required: true
          description: The ID of the cloud to retrieve.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Hardware information found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudStats'
        '404':
          description: Cloud stats not found.

  /v1/deployment/cloud/{cloudId}/node/{nodeUuid}/power:
    post:
      tags:
        - Clouds
      summary: Change the power state of the node.
      description: Change power state. Options are "power on", "power off", or "rebooting".
      parameters:
        - name: cloudId
          in: path
          required: true
          description: The ID of the cloud that owns the node.
          schema:
            type: string
        - name: nodeUuid
          in: path
          required: true
          description: The UUID of the node to change the power state. This UUID can be found in the cloud hardware information.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                power_state:
                  type: string
                  description: The new power state of the node. Options are "power on", "power off", or "rebooting".
                  example: "power on"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Power state changed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The result of the power state change
                    example: "success"
                  power_state:
                    type: string
                    description: The requested new power state of the node.
                    example: "power on"
                  node_uuid:
                    type: string
                    description: The UUID of the node.
                    example: "0000000-0000-00-00000"
        '400':
          description: Invalid power state request
        '409':
          description: Unable to process power state request - Node Locked.  Please try again in a few minutes.
        '500':
          description: Unable to update power state

  /v1/orders:
    get:
      tags:
        - Orders
      summary: Get a list of orders
      description: Retrieve a list of all orders that have been created by you or organizations that you are a member of.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderCollection'

  /v1/orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get an order by ID
      description: Retrieve a specific order by its ID.
      parameters:
        - name: orderId
          in: path
          required: true
          description: The ID of the order to retrieve.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Order found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
        '404':
          description: Order not found.

  /v1/accounts/{accountId}/orders:
    post:
      tags:
        - Orders
      summary: Create a new order
      description: Create a new order for hardware or private cloud resources.
      parameters:
        - name: accountId
          in: path
          required: true
          description: The ID of the organization account to create the order for.
          schema:
            type: string
            example: "mWLBVbB7Eq"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrder'
        '400':
          description: Invalid request payload
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /v2/inventory/locations:
    get:
      tags:
        - Inventory
      summary: Get available locations
      description: Retrieve a list of available datacenter locations and their details.
      responses:
        '200':
          description: List of locations retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locations'

  /v2/inventory/{pod_location}/availability:
    get:
      tags:
        - Inventory
      summary: Get inventory availability for a specific pod location
      description: Retrieve current inventory availability information for a specific datacenter location. This endpoint shows available hardware SKUs and their counts.
      parameters:
        - name: pod_location
          in: path
          required: true
          description: The unique datacenter identifier (e.g., "pod_1", "pod_2", etc.)
          schema:
            type: string
            example: "pod_1"
      responses:
        '200':
          description: Inventory availability retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryAvailability'
        '404':
          description: Pod location not found.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Cloud:
      type: object
      properties:
        id:
          type: string
          example: "0Absd1"
        label:
          type: string
          description: A user-friendly name for the cloud.
          example: "My first cloud"
        description:
          type: string
          description: A brief description of the cloud.
          example: "This cloud is for testing purposes."
        created_at:
          type: string
          description: The date and time the cloud was created.
          example: "2021-01-01T00:00:00Z"
        fields:
          type: object
          description: Additional fields for the cloud.
          properties:
            cloud_type:
              type: string
              description: The type of cloud. Current options are "pcc" or "baremetal".
              example: "pcc"
            cloud_uuid:
              type: string
              description: The UUID of the cloud.
              example: "0000000-0000-00-00000"
            cloud_version:
              type: string
              description: Version of the deployment suite used to provision the cloud.
              example: "2.0"
            owner_name:
              type: string
              description: The name of the organization that owns the cloud.
              example: "My Company"
            organization_id:
              type: string
              description: The organization ID that owns the cloud.
              example: "0a2erc"
            hostname:
              type: string
              description: The hostname of the cloud.
              example: "127.0.0.1"
            order_id:
              type: string
              description: The order ID of the cloud. Created when the cloud is requested.
              example: "0a2erc"
            pod_location:
              type: string
              description: Datacenter location of the cloud.
              example: "pod_2"
            provision_status:
              type: string
              description: The status of the cloud provisioning.
              example: "complete"
            provision_completion_time:
              type: string
              description: The date and time the cloud provisioning was completed.
              example: "2021-01-01T00:00:00Z"
            pending_delete:
              type: boolean
              description: Indicates if the cloud is pending deletion.
              example: false

    CloudStats:
      type: object
      properties:
        cloud_state: 
          type: string
          description: The current state of the cloud.
          enum: ["RUNNING", "PENDING", "SEMAPHORE", "ERROR", "PROVISIONING", "DELETED", "PENDING-DELETE", "SUSPENDED"]
          example: "RUNNING"
        cloud_uuid:
          type: string
          description: The UUID of the cloud.
          example: "0000000-0000-00-00000"
        nodes:
          type: array
          description: A list of nodes in the cloud.
          items:
            type: object
            properties:
              hostname:
                type: string
                description: hostname of the node.
                example: "large.node1"
              uuid:
                type: string
                description: The UUID of the node.
                example: "0000000-0000-00-00000"
              type:
                type: string
                description: The type of node.
                example: "large_v1"
              memory:
                type: string
                description: The total memory of the node.
                example: "64 GB"
              power_state:
                type: string
                description: The current power state of the node.
                schema: {
                  type: string,
                  enum: ["power on", "power off", "rebooting"]
                }
                example: "power on"
              disks:
                type: array
                description: A list of disks in the node.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the disk.
                      example: "/dev/sda"
                    size:
                      type: string
                      description: The size of the disk.
                      example: "1 TB"
                    root:
                      type: boolean
                      description: Indicates if the disk is the root disk.
                      example: true

    Locations:
      type: object      
      example:
        locations:
          pod_1:
            label: "US-East"
            displayName: "Ashburn, VA"
            region: "US"
            code: "iad3"
            release_status: "released"
          pod_2:
            label: "US-West"
            displayName: "Los Angeles, CA"
            region: "US"
            code: "lax3"
            release_status: "released"
      properties:
        locations:
          type: object
          description: A collection of available datacenter locations.
          properties:
            location_id:
              type: object
              description: A unique identifier that corresponds to the specific datacenter location.  i.e "pod_1", "pod_2", "pod_3", etc.
              properties:
                label:
                  type: string
                  description: A short identifier for the location.
                  example: "US-East"
                displayName:
                  type: string
                  description: A human-readable name for the location.
                  example: "Ashburn, VA"
                region:
                  type: string
                  description: The geographical region of the location.
                  example: "US"
                code:
                  type: string
                  description: The datacenter location code designation.
                  example: "iad3"
                release_status:
                  type: string
                  description: The current release status of the location.
                  enum: ["released", "pre-release"]
                  example: "released"

    InventoryAvailability:
      type: object
      description: Inventory availability information for a specific pod location.
      example:
        medium_v4:
          count: 3
          max_size: 2
        large_v4:
          count: 10
          max_size: 8
        timestamp: "2025-08-29T13:05:27+00:00"
        pod_location: "pod_1"
      properties:
        hardware_sku:
          type: object
          description: A unique hardware item identifier and that item's corresponding availability information.
          properties:
            count:
              type: integer
              description: The total number of available servers of this hardware type.
              example: 3
            max_size:
              type: integer
              description: The total number of available servers that can be deployed while maintaining distribution across cabinets for redundancy.
              example: 2
        timestamp:
          type: string
          format: date-time
          description: The timestamp of when the inventory availability was last checked.
          example: "2025-08-29T13:05:27+00:00"
        pod_location:
          type: string
          description: The pod location identifier that was passed in the request path.
          example: "pod_1"

    OrderFields:
      type: object
      description: The product selections and configuration options for an order.
      required:
        - items
      properties:
        items:
          type: array
          description: A list of products in the order.
          items:
            type: object
            required:
              - hardware_sku
              - location
              - type
              - quantity
            properties:
              hardware_sku:
                type: string
                description: The hardware SKU identifier from the availability endpoint.
                example: "medium_v4"
              location:
                $ref: '#/components/schemas/PodLocations'
              type:
                type: string
                description: The type of product.
                enum: ["baremetal", "pcc"]
                example: "baremetal"
              quantity:
                type: integer
                description: The quantity of the hardware SKU.
                minimum: 1
                example: 1
              modifications:
                type: object
                description: Configuration modifications for the product.  Only supported for baremetal products.
                properties:
                  deployment_configuration:
                    type: string
                    description: The ID of the custom deployment configuration to use when provisioning the node. Required for baremetal products if operating_system is not provided.
                    example: "0a7Y8ABym5"
                  operating_system:
                    type: object
                    description: The operating system to load onto the node during provisioning. Required for baremetal products if deployment_configuration is not provided.
                    properties:
                      os_key:
                        type: string
                        description: The operating system key from the image manifest.
                        example: "Ubuntu"
                      version_key:
                        type: string
                        description: The version key from the image manifest.
                        example: "22.04 LTS"
              cloud_id:
                type: string
                description: Used to specify an existing cloud that the product should be added to.
                example: "3Dop2VdpKA"
        config_options:
          type: object
          description: Configuration options for the order.  Required for baremetal products.
          properties:
            public_key:
              type: string
              description: SSH public key. Required for baremetal orders.
              example: "ssh-rsa AAAA..."

    OrderRequest:
      type: object
      required:
        - label
        - fields
      example:
        label: "Test PCC Order v2 with pending tasks check"
        description: "Baremetal Medium V4 cluster in Ashburn, VA with 1 node to run production workloads."
        fields:
          items:
            - hardware_sku: "medium_v4"
              location: "pod_1"
              type: "baremetal"
              quantity: 1
              modifications:
                operating_system:
                  os_key: "Ubuntu"
                  version_key: "22.04 LTS"

      properties:
        label:
          type: string
          description: A user-friendly name for the order.
          example: "Test PCC Order v2 with pending tasks check"
        description:
          type: string
          description: A brief description of the order (optional).
          example: "Baremetal Medium V4 cluster in Ashburn, VA with 1 node to run production workloads."
        fields:
          $ref: '#/components/schemas/OrderFields'

    OrderResponse:
      type: object      
      required:
        - id
        - type
        - created_at
        - updated_at
        - is_active
        - created_by
        - fields
      allOf:
        - $ref: '#/components/schemas/OrderRequest'
        - type: object
          properties:
            id:
              type: string
              description: The unique identifier for the order.
              example: "PGZYNxBpg3"
            type:
              type: string
              description: The type of resource.
              example: "orders"
            created_at:
              type: string
              format: date-time
              description: The date and time the order was created.
              example: "2025-08-27T20:05:56+00:00"
            updated_at:
              type: string
              format: date-time
              description: The date and time the order was last updated.
              example: "2025-08-27T20:05:56+00:00"
            is_active:
              type: boolean
              description: Indicates if the order is active.
              example: true
            created_by:
              type: string
              description: The ID of the user who created the order.
              example: "o6aQxVGezj"
            fields:
              allOf:
                - $ref: '#/components/schemas/OrderFields'
                - type: object
                  required:
                    - organization_id
                  properties:
                    organization_id:
                      type: string
                      description: The organization ID that owns the order.
                      example: "mWLBVbB7Eq"
                    schema_version:
                      type: string
                      description: The version of the schema used to create the order.
                      example: "v2"

    OrderCollection:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          required:
            - relation
          properties:
            relation:
              $ref: '#/components/schemas/Relation'

    GetOrder:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderResponse'
        - type: object
          required:
            - access
          properties:
            access:
              type: object
              description: Your user's access and permissions information for the organization that owns the order.
              properties:
                role:
                  type: string
                  description: Your user's role in the organization.
                  enum: ["owner", "member", "maintainer"]
                  example: "owner"

    Relation:
      type: object
      description: Relationship information for the order.
      properties:
        access:
          type: object
          description: Ownership information for the organization that owns the order.
          properties:
            account_id:
              type: string
              description: The account ID.
              example: "mWLBVbB7Eq"
            uuid:
              type: string
              description: The UUID of the organization.
              example: "b7a6d147-036b-4292-9041-7557ded1ec12"
            type:
              type: string
              description: The type of organization.
              example: "organization"
            display_name:
              type: string
              description: The display name of the organization.
              example: "Test Org"
            role:
              type: string
              description: The role of the user in the organization.
              example: "owner"
            has_billing:
              type: boolean
              description: Indicates if the organization has billing access.
              example: false

    PodLocations:
      type: string
      description: Available datacenter pod locations
      enum: ["pod_1", "pod_2", "pod_3", "pod_5"]
      example: "pod_1"